import streamlit as st
from rag_agent import build_rag_chain

st.set_page_config(page_title="RAG –ø–æ —Å—Ç–µ–Ω–æ–≥—Ä–∞–º–º–∞–º", layout="wide")

st.title("üìã AI-–∞–≥–µ–Ω—Ç –ø–æ —Å—Ç–µ–Ω–æ–≥—Ä–∞–º–º–∞–º GR-–∫–æ–º–∏—Ç–µ—Ç–∞")
st.markdown("–ó–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å –ø–æ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏—é –≤—Å—Ç—Ä–µ—á ‚Äî AI –Ω–∞–π–¥—ë—Ç –æ—Ç–≤–µ—Ç –ø–æ —Å–≤–æ–¥–∫–∞–º.")

# –ü–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ —Ü–µ–ø–æ—á–∫–∏
rag_chain = build_rag_chain()

# –ö—ç—à–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç –∏ –∏—Å—Ç–æ—á–Ω–∏–∫–∏
@st.cache_data(show_spinner="üîé –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∑–∞–ø—Ä–æ—Å...")
def get_rag_answer_and_sources(query: str):
    result = rag_chain(query)
    return result["result"], result.get("source_documents", [])

# –í–≤–æ–¥ –≤–æ–ø—Ä–æ—Å–∞
query = st.text_input(
    "–í–≤–µ–¥–∏—Ç–µ –≤–æ–ø—Ä–æ—Å",
    placeholder="–ß—Ç–æ –≤–∞–∂–Ω–æ–≥–æ –±—ã–ª–æ –æ–±—Å—É–∂–¥–µ–Ω–æ –ø–æ –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã–º –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤–∞–º?",
    key="user_question"
)

if query:
    answer, sources = get_rag_answer_and_sources(query)

    st.markdown("### üìå –û—Ç–≤–µ—Ç:")
    st.write(answer)

    # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –ø–æ–∫–∞–∑–∞ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
    if st.button("–ü–æ–∫–∞–∑–∞—Ç—å –∏—Å—Ç–æ—á–Ω–∏–∫–∏"):
        if not sources:
            st.info("–ò—Å—Ç–æ—á–Ω–∏–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.")
        else:
            st.markdown("### üìö –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏:")
            for i, doc in enumerate(sources):
                meta = doc.metadata
                date = meta.get("date", "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")
                doc_id = meta.get("doc_id", "N/A")
                st.markdown(f"**–ò—Å—Ç–æ—á–Ω–∏–∫ {i+1}** ‚Äî –î–æ–∫—É–º–µ–Ω—Ç ‚Ññ{doc_id}, –¥–∞—Ç–∞: {date}")
                st.code(doc.page_content[:1000], language="markdown")  # –≤—ã–≤–æ–¥–∏–º –¥–æ 1000 —Å–∏–º–≤–æ–ª–æ–≤
